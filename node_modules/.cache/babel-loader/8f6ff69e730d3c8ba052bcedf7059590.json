{"ast":null,"code":"export function getSelectionSortAnimations(array){var animations=[];var auxillaryArray=array.slice();selectionSort(auxillaryArray,animations);var javaScriptSortedArray=array.slice().sort(function(a,b){return a-b;});console.log(\"selection sort works correctly? \",arraysAreEqual(javaScriptSortedArray,auxillaryArray));array=auxillaryArray;return[animations,array];}function selectionSort(auxillaryArray,animations){var N=auxillaryArray.length;for(var i=0;i<N-1;i++){var minIndex=i;//Finding minimum element in unsorted array\nfor(var j=i+1;j<N;j++){animations.push([\"comparision1\",j,minIndex]);animations.push([\"comparision2\",j,minIndex]);if(auxillaryArray[j]<auxillaryArray[minIndex]){minIndex=j;}}animations.push([\"swap\",minIndex,auxillaryArray[i]]);animations.push([\"swap\",i,auxillaryArray[minIndex]]);// Swap the found minimum element with the first element\nswap(auxillaryArray,minIndex,i);}}function swap(auxillaryArray,firstIndex,secondIndex){var temp=auxillaryArray[firstIndex];auxillaryArray[firstIndex]=auxillaryArray[secondIndex];auxillaryArray[secondIndex]=temp;}function arraysAreEqual(firstArray,secondArray){if(firstArray.length!==secondArray.length){return false;}for(var i=0;i<firstArray.length;i++){if(firstArray[i]!==secondArray[i]){return false;}}return true;}","map":{"version":3,"sources":["/Users/admin/Desktop/sortproject/sortproject/src/bubblesort/SortingAlgorithms/SelectionSort.js"],"names":["getSelectionSortAnimations","array","animations","auxillaryArray","slice","selectionSort","javaScriptSortedArray","sort","a","b","console","log","arraysAreEqual","N","length","i","minIndex","j","push","swap","firstIndex","secondIndex","temp","firstArray","secondArray"],"mappings":"AAAA,MAAO,SAASA,CAAAA,0BAAT,CAAoCC,KAApC,CAA2C,CAC9C,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAIC,CAAAA,cAAc,CAAGF,KAAK,CAACG,KAAN,EAArB,CACAC,aAAa,CAACF,cAAD,CAAiBD,UAAjB,CAAb,CACA,GAAMI,CAAAA,qBAAqB,CAAGL,KAAK,CAACG,KAAN,GAAcG,IAAd,CAAmB,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAAGC,CAAd,EAAnB,CAA9B,CACAC,OAAO,CAACC,GAAR,CAAY,kCAAZ,CAAgDC,cAAc,CAACN,qBAAD,CAAwBH,cAAxB,CAA9D,EACAF,KAAK,CAAGE,cAAR,CACA,MAAO,CAACD,UAAD,CAAaD,KAAb,CAAP,CACH,CAED,QAASI,CAAAA,aAAT,CAAuBF,cAAvB,CAAuCD,UAAvC,CAAmD,CAC/C,GAAMW,CAAAA,CAAC,CAAGV,cAAc,CAACW,MAAzB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,CAAC,CAAG,CAAxB,CAA2BE,CAAC,EAA5B,CAAgC,CAC5B,GAAIC,CAAAA,QAAQ,CAAGD,CAAf,CAAkB;AAClB,IAAK,GAAIE,CAAAA,CAAC,CAAGF,CAAC,CAAG,CAAjB,CAAoBE,CAAC,CAAGJ,CAAxB,CAA2BI,CAAC,EAA5B,CAAgC,CAC5Bf,UAAU,CAACgB,IAAX,CAAgB,CAAC,cAAD,CAAiBD,CAAjB,CAAoBD,QAApB,CAAhB,EACAd,UAAU,CAACgB,IAAX,CAAgB,CAAC,cAAD,CAAiBD,CAAjB,CAAoBD,QAApB,CAAhB,EACA,GAAIb,cAAc,CAACc,CAAD,CAAd,CAAoBd,cAAc,CAACa,QAAD,CAAtC,CAAkD,CAC9CA,QAAQ,CAAGC,CAAX,CACH,CACJ,CACDf,UAAU,CAACgB,IAAX,CAAgB,CAAC,MAAD,CAASF,QAAT,CAAmBb,cAAc,CAACY,CAAD,CAAjC,CAAhB,EACAb,UAAU,CAACgB,IAAX,CAAgB,CAAC,MAAD,CAASH,CAAT,CAAYZ,cAAc,CAACa,QAAD,CAA1B,CAAhB,EACA;AACAG,IAAI,CAAChB,cAAD,CAAiBa,QAAjB,CAA2BD,CAA3B,CAAJ,CACH,CACJ,CAED,QAASI,CAAAA,IAAT,CAAchB,cAAd,CAA8BiB,UAA9B,CAA0CC,WAA1C,CAAuD,CACnD,GAAIC,CAAAA,IAAI,CAAGnB,cAAc,CAACiB,UAAD,CAAzB,CACAjB,cAAc,CAACiB,UAAD,CAAd,CAA6BjB,cAAc,CAACkB,WAAD,CAA3C,CACAlB,cAAc,CAACkB,WAAD,CAAd,CAA8BC,IAA9B,CACH,CAED,QAASV,CAAAA,cAAT,CAAwBW,UAAxB,CAAoCC,WAApC,CAAiD,CAC7C,GAAID,UAAU,CAACT,MAAX,GAAsBU,WAAW,CAACV,MAAtC,CAA8C,CAC1C,MAAO,MAAP,CACH,CACD,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGQ,UAAU,CAACT,MAA/B,CAAuCC,CAAC,EAAxC,CAA4C,CACxC,GAAIQ,UAAU,CAACR,CAAD,CAAV,GAAkBS,WAAW,CAACT,CAAD,CAAjC,CAAsC,CAClC,MAAO,MAAP,CACH,CACJ,CACD,MAAO,KAAP,CACH","sourcesContent":["export function getSelectionSortAnimations(array) {\n    let animations = [];\n    let auxillaryArray = array.slice();\n    selectionSort(auxillaryArray, animations);\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n    console.log(\"selection sort works correctly? \", arraysAreEqual(javaScriptSortedArray, auxillaryArray));\n    array = auxillaryArray;\n    return [animations, array];\n}\n\nfunction selectionSort(auxillaryArray, animations) {\n    const N = auxillaryArray.length;\n    for (let i = 0; i < N - 1; i++) {\n        let minIndex = i; //Finding minimum element in unsorted array\n        for (let j = i + 1; j < N; j++) {\n            animations.push([\"comparision1\", j, minIndex]);\n            animations.push([\"comparision2\", j, minIndex]);\n            if (auxillaryArray[j] < auxillaryArray[minIndex]) {\n                minIndex = j;\n            }\n        }\n        animations.push([\"swap\", minIndex, auxillaryArray[i]]);\n        animations.push([\"swap\", i, auxillaryArray[minIndex]]);\n        // Swap the found minimum element with the first element\n        swap(auxillaryArray, minIndex, i);\n    }\n}\n\nfunction swap(auxillaryArray, firstIndex, secondIndex) {\n    let temp = auxillaryArray[firstIndex];\n    auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n    auxillaryArray[secondIndex] = temp;\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n    if (firstArray.length !== secondArray.length) {\n        return false;\n    }\n    for (let i = 0; i < firstArray.length; i++) {\n        if (firstArray[i] !== secondArray[i]) {\n            return false;\n        }\n    }\n    return true;\n}"]},"metadata":{},"sourceType":"module"}