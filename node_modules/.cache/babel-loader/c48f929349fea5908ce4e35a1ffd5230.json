{"ast":null,"code":"export function getHeapSortAnimations(array){var animations=[];var auxillaryArray=array.slice();var len=array.length;HeapSortHelper(auxillaryArray,animations,len);array=auxillaryArray;console.log(animations);return[animations,array];}function HeapSortHelper(auxillaryArray,animations,len){for(var i=len/2-1;i>=0;i--){HeapSort(auxillaryArray,animations,i,len);}for(var _i=len-1;_i>0;--_i){swap(animations,auxillaryArray,0,_i);HeapSort(auxillaryArray,animations,0,_i);}}function HeapSort(auxillaryArray,animations,parent,size){var temp_parent=parent;var left_child=parent*2+1;var right_child=parent*2+2;console.log(auxillaryArray);if(left_child<size&&auxillaryArray[temp_parent]<auxillaryArray[left_child]){temp_parent=left_child;}if(right_child<size&&auxillaryArray[temp_parent]<auxillaryArray[right_child]){temp_parent=right_child;}if(parent!=temp_parent){/*animations.push([temp_parent, parent]);\n        animations.push([temp_parent, parent]);\n        animations.push([parent, auxillaryArray[temp_parent]]);\n        animations.push([temp_parent, auxillaryArray[parent]]);*/swap(animations,auxillaryArray,parent,temp_parent);HeapSort(auxillaryArray,animations,temp_parent,size);}else{animations.push([temp_parent,parent]);animations.push([temp_parent,parent]);animations.push([-1,auxillaryArray[temp_parent]]);animations.push([-1,auxillaryArray[parent]]);}}function swap(animations,auxillaryArray,firstIndex,secondIndex){animations.push([firstIndex,secondIndex]);animations.push([firstIndex,secondIndex]);animations.push([firstIndex,auxillaryArray[secondIndex]]);animations.push([secondIndex,auxillaryArray[firstIndex]]);var temp=auxillaryArray[firstIndex];auxillaryArray[firstIndex]=auxillaryArray[secondIndex];auxillaryArray[secondIndex]=temp;}","map":{"version":3,"sources":["/Users/admin/Desktop/sortproject/sortproject/src/bubblesort/SortingAlgorithms/HeapSort.js"],"names":["getHeapSortAnimations","array","animations","auxillaryArray","slice","len","length","HeapSortHelper","console","log","i","HeapSort","swap","parent","size","temp_parent","left_child","right_child","push","firstIndex","secondIndex","temp"],"mappings":"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","sourcesContent":["export function getHeapSortAnimations(array) {\n    let animations = [];\n    let auxillaryArray = array.slice();\n    let len = array.length;\n    HeapSortHelper(auxillaryArray, animations, len);\n    array = auxillaryArray;\n    console.log(animations);\n    return [animations, array];\n}\n\nfunction HeapSortHelper(auxillaryArray, animations, len)\n{\n    for(let i = len/2-1; i >= 0; i--){\n        HeapSort(auxillaryArray, animations, i, len);\n    }\n    \n    for(let i = len-1; i>0; --i){\n        \n        swap(animations, auxillaryArray, 0, i);\n        HeapSort(auxillaryArray, animations, 0, i);\n\n    }\n}\nfunction HeapSort(auxillaryArray, animations, parent, size) {\n    var temp_parent = parent;\n    var left_child = parent * 2 + 1;\n    var right_child = parent * 2 + 2;\n\n    console.log(auxillaryArray);\n\n    if(left_child < size && auxillaryArray[temp_parent] < auxillaryArray[left_child]){\n        temp_parent = left_child;\n    }\n\n    if(right_child < size && auxillaryArray[temp_parent] < auxillaryArray[right_child]){\n        temp_parent = right_child;\n    }\n\n    if(parent != temp_parent){\n        /*animations.push([temp_parent, parent]);\n        animations.push([temp_parent, parent]);\n        animations.push([parent, auxillaryArray[temp_parent]]);\n        animations.push([temp_parent, auxillaryArray[parent]]);*/\n        swap(animations, auxillaryArray, parent, temp_parent);\n        HeapSort(auxillaryArray, animations, temp_parent, size);\n    }\n    else {\n        animations.push([temp_parent, parent]);\n        animations.push([temp_parent, parent]);\n        animations.push([-1, auxillaryArray[temp_parent]]);\n        animations.push([-1, auxillaryArray[parent]]);\n    }\n}\n\nfunction swap(animations, auxillaryArray, firstIndex, secondIndex) {\n    animations.push([firstIndex, secondIndex]);\n    animations.push([firstIndex, secondIndex]);\n    animations.push([firstIndex, auxillaryArray[secondIndex]]);\n    animations.push([secondIndex, auxillaryArray[firstIndex]]);\n    let temp = auxillaryArray[firstIndex];\n    auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n    auxillaryArray[secondIndex] = temp;\n}\n\n"]},"metadata":{},"sourceType":"module"}