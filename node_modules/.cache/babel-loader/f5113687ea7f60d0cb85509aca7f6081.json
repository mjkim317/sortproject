{"ast":null,"code":"export function getQuickSortAnimations(array){var animations=[];var auxillaryArray=array.slice();quickSort(auxillaryArray,0,auxillaryArray.length-1,animations);var javaScriptSortedArray=array.slice().sort(function(a,b){return a-b;});console.log(\"sort works correctly? \",arraysAreEqual(javaScriptSortedArray,auxillaryArray));array=auxillaryArray;return[animations,array];}function quickSort(auxillaryArray,startIndex,endIndex,animations){var pivotIndex;if(startIndex<endIndex){pivotIndex=partitionArray(auxillaryArray,startIndex,endIndex,animations);quickSort(auxillaryArray,startIndex,pivotIndex-1,animations);quickSort(auxillaryArray,pivotIndex+1,endIndex,animations);}}function partitionArray(auxillaryArray,startIndex,endIndex,animations){var pivot=auxillaryArray[endIndex];var pivotIndex=startIndex;for(var i=startIndex;i<=endIndex-1;i++){animations.push([i,endIndex]);animations.push([i,endIndex]);if(auxillaryArray[i]<=pivot){//Swap these two heights\nanimations.push([i,auxillaryArray[pivotIndex]]);animations.push([pivotIndex,auxillaryArray[i]]);swap(auxillaryArray,i,pivotIndex);pivotIndex++;}else{animations.push([-1,-1]);animations.push([-1,-1]);}animations.push([-1,-1]);animations.push([-1,-1]);}animations.push([-1,-1]);animations.push([-1,-1]);animations.push([-1,-1]);animations.push([-1,-1]);//Swap these two heights\nanimations.push([pivotIndex,auxillaryArray[endIndex]]);animations.push([endIndex,auxillaryArray[pivotIndex]]);swap(auxillaryArray,pivotIndex,endIndex);return pivotIndex;}function swap(auxillaryArray,firstIndex,secondIndex){var temp=auxillaryArray[firstIndex];auxillaryArray[firstIndex]=auxillaryArray[secondIndex];auxillaryArray[secondIndex]=temp;}function arraysAreEqual(firstArray,secondArray){if(firstArray.length!==secondArray.length){return false;}for(var i=0;i<firstArray.length;i++){if(firstArray[i]!==secondArray[i]){return false;}}return true;}","map":{"version":3,"sources":["/Users/admin/Desktop/sortproject/sortproject/src/bubblesort/SortingAlgorithms/QuickSort.js"],"names":["getQuickSortAnimations","array","animations","auxillaryArray","slice","quickSort","length","javaScriptSortedArray","sort","a","b","console","log","arraysAreEqual","startIndex","endIndex","pivotIndex","partitionArray","pivot","i","push","swap","firstIndex","secondIndex","temp","firstArray","secondArray"],"mappings":"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","sourcesContent":["export function getQuickSortAnimations(array) {\n    let animations = [];\n    let auxillaryArray = array.slice();\n    quickSort(auxillaryArray, 0, auxillaryArray.length - 1, animations);\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n    console.log(\"sort works correctly? \", arraysAreEqual(javaScriptSortedArray, auxillaryArray));\n    array = auxillaryArray;\n    return [animations, array];\n}\n\nfunction quickSort(auxillaryArray, startIndex, endIndex, animations) {\n    let pivotIndex;\n    if (startIndex < endIndex) {\n        pivotIndex = partitionArray(auxillaryArray, startIndex, endIndex, animations);\n        quickSort(auxillaryArray, startIndex, pivotIndex - 1, animations);\n        quickSort(auxillaryArray, pivotIndex + 1, endIndex, animations);\n    }\n}\n\nfunction partitionArray(auxillaryArray, startIndex, endIndex, animations) {\n    let pivot = auxillaryArray[endIndex];\n    let pivotIndex = startIndex;\n    for (let i = startIndex; i <= endIndex - 1; i++) {\n        animations.push([i, endIndex]);\n        animations.push([i, endIndex]);\n        if (auxillaryArray[i] <= pivot) {\n            //Swap these two heights\n            animations.push([i, auxillaryArray[pivotIndex]]);\n            animations.push([pivotIndex, auxillaryArray[i]]);\n            swap(auxillaryArray, i, pivotIndex);\n            pivotIndex++;\n        } else {\n            animations.push([-1, -1]);\n            animations.push([-1, -1]);\n        }\n        animations.push([-1, -1]);\n        animations.push([-1, -1]);\n    }\n    animations.push([-1, -1]);\n    animations.push([-1, -1]);\n    animations.push([-1, -1]);\n    animations.push([-1, -1]);\n    //Swap these two heights\n    animations.push([pivotIndex, auxillaryArray[endIndex]]);\n    animations.push([endIndex, auxillaryArray[pivotIndex]]);\n    swap(auxillaryArray, pivotIndex, endIndex);\n    return pivotIndex;\n}\n\nfunction swap(auxillaryArray, firstIndex, secondIndex) {\n    let temp = auxillaryArray[firstIndex];\n    auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n    auxillaryArray[secondIndex] = temp;\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n    if (firstArray.length !== secondArray.length) {\n        return false;\n    }\n    for (let i = 0; i < firstArray.length; i++) {\n        if (firstArray[i] !== secondArray[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n"]},"metadata":{},"sourceType":"module"}