{"ast":null,"code":"export function getInsertionSortAnimations(array){var animations=[];var auxillaryArray=array.slice();insertionSort(auxillaryArray,animations);var javaScriptSortedArray=array.slice().sort(function(a,b){return a-b;});console.log(\"sort works correctly? \",arraysAreEqual(javaScriptSortedArray,auxillaryArray));array=auxillaryArray;return[animations,array];}function insertionSort(auxillaryArray,animations){var N=auxillaryArray.length;for(var i=1;i<N;i++){var key=auxillaryArray[i];var j=i-1;animations.push([\"comparision1\",j,i]);animations.push([\"comparision2\",j,i]);while(j>=0&&auxillaryArray[j]>key){animations.push([\"overwrite\",j+1,auxillaryArray[j]]);auxillaryArray[j+1]=auxillaryArray[j];j=j-1;if(j>=0){animations.push([\"comparision1\",j,i]);animations.push([\"comparision2\",j,i]);}}animations.push([\"overwrite\",j+1,key]);auxillaryArray[j+1]=key;}}function arraysAreEqual(firstArray,secondArray){if(firstArray.length!==secondArray.length){return false;}for(var i=0;i<firstArray.length;i++){if(firstArray[i]!==secondArray[i]){return false;}}return true;}","map":{"version":3,"sources":["/Users/admin/Desktop/sortproject/sortproject/src/bubblesort/SortingAlgorithms/InsertionSort.js"],"names":["getInsertionSortAnimations","array","animations","auxillaryArray","slice","insertionSort","javaScriptSortedArray","sort","a","b","console","log","arraysAreEqual","N","length","i","key","j","push","firstArray","secondArray"],"mappings":"AAAA,MAAO,SAASA,CAAAA,0BAAT,CAAoCC,KAApC,CAA2C,CAC9C,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAIC,CAAAA,cAAc,CAAGF,KAAK,CAACG,KAAN,EAArB,CACAC,aAAa,CAACF,cAAD,CAAiBD,UAAjB,CAAb,CACA,GAAMI,CAAAA,qBAAqB,CAAGL,KAAK,CAACG,KAAN,GAAcG,IAAd,CAAmB,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAAGC,CAAd,EAAnB,CAA9B,CACAC,OAAO,CAACC,GAAR,CAAY,wBAAZ,CAAsCC,cAAc,CAACN,qBAAD,CAAwBH,cAAxB,CAApD,EACAF,KAAK,CAAGE,cAAR,CACA,MAAO,CAACD,UAAD,CAAaD,KAAb,CAAP,CACH,CAED,QAASI,CAAAA,aAAT,CAAuBF,cAAvB,CAAuCD,UAAvC,CAAmD,CAC/C,GAAMW,CAAAA,CAAC,CAAGV,cAAc,CAACW,MAAzB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,CAApB,CAAuBE,CAAC,EAAxB,CAA4B,CACxB,GAAIC,CAAAA,GAAG,CAAGb,cAAc,CAACY,CAAD,CAAxB,CACA,GAAIE,CAAAA,CAAC,CAAGF,CAAC,CAAG,CAAZ,CACAb,UAAU,CAACgB,IAAX,CAAgB,CAAC,cAAD,CAAiBD,CAAjB,CAAoBF,CAApB,CAAhB,EACAb,UAAU,CAACgB,IAAX,CAAgB,CAAC,cAAD,CAAiBD,CAAjB,CAAoBF,CAApB,CAAhB,EACA,MAAOE,CAAC,EAAI,CAAL,EAAUd,cAAc,CAACc,CAAD,CAAd,CAAoBD,GAArC,CAA0C,CACtCd,UAAU,CAACgB,IAAX,CAAgB,CAAC,WAAD,CAAcD,CAAC,CAAG,CAAlB,CAAqBd,cAAc,CAACc,CAAD,CAAnC,CAAhB,EACAd,cAAc,CAACc,CAAC,CAAG,CAAL,CAAd,CAAwBd,cAAc,CAACc,CAAD,CAAtC,CACAA,CAAC,CAAGA,CAAC,CAAG,CAAR,CACA,GAAIA,CAAC,EAAI,CAAT,CAAY,CACRf,UAAU,CAACgB,IAAX,CAAgB,CAAC,cAAD,CAAiBD,CAAjB,CAAoBF,CAApB,CAAhB,EACAb,UAAU,CAACgB,IAAX,CAAgB,CAAC,cAAD,CAAiBD,CAAjB,CAAoBF,CAApB,CAAhB,EACH,CACJ,CACDb,UAAU,CAACgB,IAAX,CAAgB,CAAC,WAAD,CAAcD,CAAC,CAAG,CAAlB,CAAqBD,GAArB,CAAhB,EACAb,cAAc,CAACc,CAAC,CAAG,CAAL,CAAd,CAAwBD,GAAxB,CACH,CACJ,CAED,QAASJ,CAAAA,cAAT,CAAwBO,UAAxB,CAAoCC,WAApC,CAAiD,CAC7C,GAAID,UAAU,CAACL,MAAX,GAAsBM,WAAW,CAACN,MAAtC,CAA8C,CAC1C,MAAO,MAAP,CACH,CACD,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGI,UAAU,CAACL,MAA/B,CAAuCC,CAAC,EAAxC,CAA4C,CACxC,GAAII,UAAU,CAACJ,CAAD,CAAV,GAAkBK,WAAW,CAACL,CAAD,CAAjC,CAAsC,CAClC,MAAO,MAAP,CACH,CACJ,CACD,MAAO,KAAP,CACH","sourcesContent":["export function getInsertionSortAnimations(array) {\n    let animations = [];\n    let auxillaryArray = array.slice();\n    insertionSort(auxillaryArray, animations);\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n    console.log(\"sort works correctly? \", arraysAreEqual(javaScriptSortedArray, auxillaryArray));\n    array = auxillaryArray;\n    return [animations, array];\n}\n\nfunction insertionSort(auxillaryArray, animations) {\n    const N = auxillaryArray.length;\n    for (let i = 1; i < N; i++) {\n        let key = auxillaryArray[i];\n        let j = i - 1;\n        animations.push([\"comparision1\", j, i]);\n        animations.push([\"comparision2\", j, i]);\n        while (j >= 0 && auxillaryArray[j] > key) {\n            animations.push([\"overwrite\", j + 1, auxillaryArray[j]]);\n            auxillaryArray[j + 1] = auxillaryArray[j];\n            j = j - 1;\n            if (j >= 0) {\n                animations.push([\"comparision1\", j, i]);\n                animations.push([\"comparision2\", j, i]);\n            }\n        }\n        animations.push([\"overwrite\", j + 1, key]);\n        auxillaryArray[j + 1] = key;\n    }\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n    if (firstArray.length !== secondArray.length) {\n        return false;\n    }\n    for (let i = 0; i < firstArray.length; i++) {\n        if (firstArray[i] !== secondArray[i]) {\n            return false;\n        }\n    }\n    return true;\n}"]},"metadata":{},"sourceType":"module"}