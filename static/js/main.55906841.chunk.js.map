{"version":3,"sources":["components/Header.js","components/BarCanvas.js","components/BarContainer.js","sort/SortType.js","sort/ElementMakeType.js","sort/SortUtils.js","components/Setting.js","components/Container.js","sort/State.js","sort/Color.js","sort/Element.js","sort/Sort.js","sort/BubbleSort.js","sort/SelectionSort.js","sort/InsertionSort.js","sort/BottomUpMergeSort.js","sort/QuickSort.js","sort/HeapSort.js","sort/SortFactory.js","pages/Home.js","bubblesort/SortingVisualizer/Header.js","bubblesort/SortingAlgorithms/BubbleSort.js","bubblesort/SortingAlgorithms/SelectionSort.js","bubblesort/SortingAlgorithms/MergeSort.js","bubblesort/SortingAlgorithms/QuickSort.js","bubblesort/SortingAlgorithms/HeapSort.js","pages/RandomPage.js","bubblesort/SortingAlgorithms/InsertionSort.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","BarCanvas","Canvas","document","createElement","ctx","backCtx","this","refs","canvas","getContext","alpha","Draw","drawImage","requestAnimationFrame","prevProps","prevState","props","width","height","fillStyle","fillRect","element","arr","w","length","beginPath","x","state","color","h","y","rect","strokeStyle","stroke","ref","BarContainer","changeSize","barContainer","offsetWidth","offsetHeight","setState","window","addEventListener","removeEventListener","SortType","getSortName","type","Bubble","Selection","Insertion","Quick","Merge","Heap","Setting","fileList","onTypeChange","e","handleSortType","parseInt","target","value","onElemTypeChange","handleElemType","onElemCountChange","handleLength","onDelayChange","delay","handleDelay","onStartClick","handleSorting","onStopClick","handleStop","onRemakeClick","remakeHeightList","sortingType","elemType","ElementMakeType","sortType","elementType","list","htmlFor","name","onChange","map","sort","index","elem","onClick","to","Container","sorting","State","setHeight","setColor","Element","initElements","offset","RANDOM","i","Math","random","push","Color","ASCENDING","DESCENDING","SELECTFILE","console","log","Sort","elements","handler","stopHandler","start","clearEvent","delayList","setTimeout","stop","event","clearTimeout","registerCallback","callback","BubbleSort","firstIterate","secondIterate","j","SelectionSort","chooseMinElement","minIdx","InsertionSort","BottomUpMergeSort","newArr","mergeSort","size","bottomUp","left","merge","min","mid","right","k","apply","current","QuickSort","quickSort","position","pivot","HeapSort","constructHeap","heapSort","cur","cb","downHeap","end","data","here","cmpIdx","SortFactory","getSort","undefined","sorts","getSortInstance","home","sortFactory","handleArray","remakeFileList","updateElementArr","sortInstance","getBubbleSortAnimations","array","animations","auxillaryArray","slice","N","swap","bubbleSort","a","b","firstIndex","secondIndex","temp","getSelectionSortAnimations","minIndex","selectionSort","javaScriptSortedArray","firstArray","secondArray","arraysAreEqual","getMergeSort","auxiliaryArray","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","floor","getQuickSortAnimations","startIndex","endIndex","pivotIndex","partitionArray","getHeapSortAnimations","len","HeapSortHelper","parent","temp_parent","left_child","right_child","PRIMARY_COLOR","SECONDARY_COLOR","SortingViz","afterFunc","saveToFile_Chrome","fn_newCallBack","afterFunc1","afterFunc2","insertionSort","afterFunc3","afterFunc4","afterFunc5","resetArray","isColorChange","arrayBars","getElementsByClassName","barOneIndex","barTwoIndex","barOneStyle","style","barTwoStyle","backgroundColor","barIndex","newHeight","barStyle","key","getInsertionSortAnimations","barOneIdx","barTwoIdx","file","files","fileReader","FileReader","onload","result","split","Number","readAsText","for","id","display","accept","handleChange","bind","handleChange4","handleChange1","handleChange2","handleChange3","handleChange5","idx","React","fileName","content","blob","Blob","objURL","URL","createObjectURL","__Xr_objURL_forCreatingFile__","revokeObjectURL","download","href","click","App","path","component","Home","exact","RandomPage","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55906841.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport '../style/header.css';\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className=\"mainheader\">\n                <h1>Minji's algorithm Term project</h1>\n                \n            </div>\n        );\n    }\n}\n\nexport default Header;\n","import React, {Component} from 'react';\n\nclass BarCanvas extends Component {\n    Canvas = document.createElement('canvas');\n    ctx = null;\n    backCtx = null;\n\n    componentDidMount() {\n        if (this.ctx === null) {\n            this.ctx = this.refs.canvas.getContext(\"2d\", {\n                alpha: false\n            });\n        }\n        const Draw = () => {\n            this.ctx.drawImage(this.Canvas, 0, 0);\n            requestAnimationFrame(Draw);\n        };\n        Draw();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {\n            width,\n            height\n        } = this.props;\n        this.Canvas.width = width;\n        this.Canvas.height = height;\n        if (this.backCtx === null) {\n            this.backCtx = this.Canvas.getContext(\"2d\", {\n                alpha: false\n            });\n        }\n        \n        this.backCtx.fillStyle = \"black\";\n        this.backCtx.fillRect(0, 0, width, height);\n        const element = this.props.element.arr;\n        const w = width / (element.length + 2);\n        this.backCtx.beginPath();\n        let x = w;\n        for (const state of element) {\n            this.backCtx.fillStyle = state.color;\n            const h = (height * state.height) / 100;\n            let y = height - h;\n            this.backCtx.fillRect(x, y, w, h);\n            this.backCtx.rect(x, y, w, h);\n            x += w;\n        }\n        this.backCtx.strokeStyle = \"black\";\n        this.backCtx.stroke();\n    }\n\n    render() {\n        const {width, height} = this.props;\n        return (\n            <canvas ref='canvas' width={width} height={height}/>\n        )\n    }\n}\n\nexport default BarCanvas;\n","import React, {Component} from 'react';\nimport BarCanvas from './BarCanvas';\n\nclass BarContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: 0,\n            height: 0\n        }\n    }\n\n    changeSize = () => {\n        const barContainer = this.refs.barContainer;\n        const width = barContainer.offsetWidth;\n        const height = barContainer.offsetHeight;\n        this.setState({\n            width,\n            height\n        });\n    }\n\n    componentDidMount() {\n        this.changeSize();\n        window.addEventListener('resize', this.changeSize);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.changeSize);\n    }\n\n    render() {\n        const {height, width} = this.state;\n        return (\n            <div className=\"bar-container\" ref=\"barContainer\">\n                <BarCanvas element={this.props.element} height={height} width={width}/>\n            </div>\n        );\n    }\n}\n\nexport default BarContainer;\n","const SortType = {\n    \"Bubble\": 0,\n    \"Selection\": 1,\n    \"Insertion\": 2,\n    \"Quick\": 3,\n    \"Merge\": 4,\n    \"Heap\": 5\n};\n\nexport default SortType;","\nexport default {\n    \"RANDOM\": 0,\n    \"ASCENDING\": 1,\n    \"DESCENDING\": 2,\n    \"SELECTFILE\": 3\n};","import SortType from \"./SortType\";\n\nconst getSortName = (type) => {\n    switch (type) {\n        case SortType.Bubble:\n            return \"Bubble Sort\";\n        case SortType.Selection:\n            return \"Selection Sort\";\n        case SortType.Insertion:\n            return \"Insertion Sort\";\n        case SortType.Quick:\n            return \"Quick Sort\";\n        case SortType.Merge:\n            return \"Merge Sort\";\n        case SortType.Heap:\n            return \"Heap Sort\";\n    }\n}\n\n\nexport {getSortName};","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport SortType from \"../sort/SortType\";\nimport ElementMakeType from \"../sort/ElementMakeType\";\nimport {getSortName} from \"../sort/SortUtils\";\n\nclass Setting extends Component {\n    state = {\n        fileList : []\n    }\n    \n    onTypeChange = (e) => {\n        this.props.handleSortType(parseInt(e.target.value));\n    }\n\n    onElemTypeChange = (e) => {\n        this.props.handleElemType(parseInt(e.target.value));\n    }\n\n    onElemCountChange = (e) => {\n        let length = parseInt(e.target.value) || 1;\n        if (length < 1) {\n            length = 1;\n        } else if (length > 100) { //최대 가능 개수 100개 \n            length = 100;\n        }\n        this.props.handleLength(parseInt(length));\n    }\n\n    onDelayChange = (e) => {\n        let delay = parseInt(e.target.value) || 1;\n        if (delay < 1) {\n            delay = 1;\n        }\n        this.props.handleDelay(delay);\n    }\n\n    onStartClick = () => {\n        this.props.handleSorting();\n    }\n\n    onStopClick = () => {\n        this.props.handleStop();\n    }\n\n    onRemakeClick = () => {\n        this.props.remakeHeightList();\n    }\n\n    render() {\n        const sortingType = [];\n        for (const type in SortType) {\n            sortingType[SortType[type]] = getSortName(SortType[type]);\n        }\n        const elemType = [];\n        for (const type in ElementMakeType) {\n            elemType[ElementMakeType[type]] = type;\n        }\n        const {\n            length,\n            delay,\n            sortType,\n            elementType,\n            list\n        } = this.props;\n\n        return (\n            <div className=\"setting\">\n                <label htmlFor=\"type\">Sort Type</label>\n                <br/>\n                <select name=\"type\" onChange={this.onTypeChange} value={sortType}>\n                    {sortingType.map((sort, index) => (\n                        <option value={index} key={index}>{sort}</option>\n                    ))}\n                </select>\n                <br/>\n                <br/>\n                <label htmlFor=\"elemtype\">Elem Type</label>\n                <br/>\n                <select name=\"elemtype\" onChange={this.onElemTypeChange} value={elementType}>\n                    {elemType.map((elem, index) => (\n                        <option value={index} key={index}>{elem}</option>\n                    ))}\n                </select>\n                <br/>\n                <br/>\n                <label htmlFor=\"num\">Elem Count</label>\n                <br/>\n                <input type=\"number\" name=\"num\" value={length} onChange={this.onElemCountChange}/>\n                <br/>\n                <br/>\n                <br/>\n                <label htmlFor=\"delay\">Delay</label>\n                <br/>\n                <input type=\"number\" name=\"delay\" value={delay} onChange={this.onDelayChange}/>ms\n                <br/>\n                <br/>\n                <input type=\"button\" value=\"Start\" onClick={this.onStartClick}/>\n                <input type=\"button\" value=\"Stop\" onClick={this.onStopClick}/>\n                <input type=\"button\" value=\"remake\" onClick={this.onRemakeClick}/>\n                <br/>\n                <br/>\n                <Link to=\"./filepage\"> \n                    <input type = \"button\" value=\"input text file\"/>\n                </Link>\n                <br/>\n                <br/>\n                \n            </div>\n        )\n    }\n}\n\nexport default Setting;\n","import React, {Component} from 'react';\nimport BarContainer from './BarContainer'\nimport Setting from './Setting';\nimport '../style/container.css';\n\nclass Container extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <Setting\n                    {...this.props}\n                />\n                <BarContainer length={this.props.length} element={this.props.element} sorting={this.props.sorting}/>\n                \n            </div>\n        );\n    }\n}\n\nexport default Container;\n","class State {\n    constructor(height, color) {\n        this.height = height;\n        this.color = color;\n    }\n\n    setHeight = (height) => {\n        this.height = height;\n    }\n\n    setColor = (color) => {\n        this.color = color;\n    }\n}\n\nexport default State","export default {\n    \"RED\": \"#FF0000\",\n    \"GREEN\": \"#00FF00\",\n    \"WHITE\": \"#FFFFFF\"\n};\n","import ElementMakeType from \"./ElementMakeType\";\nimport State from \"./State\";\nimport Color from \"./Color\";\n\nclass Element {\n    constructor() {\n        this.arr = null;\n    }\n\n    initElements = (length, type, list) => {\n        this.arr = [];\n        let offset;\n        switch (type) {\n            case ElementMakeType.RANDOM:\n                for (let i = 0; i < length; i++) {\n                    const height = Math.random() * 100;\n                    this.arr.push(new State(height, Color.WHITE));\n                }\n                break;\n            case ElementMakeType.ASCENDING:\n                offset = 100 / (length + 1);\n                this.arr.push(new State(offset, Color.WHITE));\n                for (let i = 0; i < length - 1; i++) {\n                    this.arr.push(new State(this.arr[i].height + offset, Color.WHITE));\n                }\n                break;\n            case ElementMakeType.DESCENDING:\n                offset = 100 / (length + 1);\n                this.arr.push(new State(100 - offset, Color.WHITE));\n                for (let i = 0; i < length - 1; i++) {\n                    this.arr.push(new State(this.arr[i].height - offset, Color.WHITE));\n                }\n                break ;\n\n                case ElementMakeType.SELECTFILE:\n                    console.log(list);\n                    \n                    break;\n\n            default:\n                break;\n        }\n    }\n}\n\nexport default Element;","class Sort {\n    constructor(elements, delay, handler, stopHandler) {\n        this.elements = elements;\n        this.delay = delay;\n        this.handler = handler;\n        this.delayList = [];\n        this.stopHandler = stopHandler;\n        this.list = [];\n    }\n\n    start = () => {\n        this.clearEvent();\n        this.delayList.push(setTimeout(() => this.sort(), 0));\n    }\n\n    stop = () => {\n        this.clearEvent();\n        this.handler(this.elements);\n    }\n\n    clearEvent = () => {\n        for (const event of this.delayList) {\n            clearTimeout(event);\n        }\n        this.delayList = [];\n    }\n\n    sort = () => {\n    }\n\n    registerCallback = (callback) => {\n        this.delayList.push(setTimeout(callback, this.delay));\n    }\n}\n\nexport default Sort;\n","import Sort from \"./Sort\";\nimport Color from \"./Color\";\n\nclass BubbleSort extends Sort {\n    sort = () => {\n        this.firstIterate(this.elements, this.elements.length - 1, 0);\n    }\n\n    firstIterate = (arr, i) => {\n        if (i <= 0) {\n            this.handler(arr);\n            return;\n        }\n        this.secondIterate(arr, i, 0);\n    }\n\n    secondIterate = (arr, i, j) => {\n        if (j >= i) {\n            this.handler(arr);\n            this.firstIterate(arr, i - 1);\n            return;\n        }\n        if (arr[j].height > arr[j + 1].height) {\n            [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\n            arr[j].color = arr[j + 1].color = Color.RED;\n        } else {\n            arr[j].color = arr[j + 1].color = Color.GREEN;\n        }\n        this.handler(arr);\n        arr[j].color = arr[j + 1].color = Color.WHITE;\n        this.registerCallback(() => this.secondIterate(arr, i, j + 1));\n    }\n}\n\nexport default BubbleSort;\n","import Sort from \"./Sort\";\nimport Color from \"./Color\";\n\nclass SelectionSort extends Sort {\n    sort = () => {\n        this.firstIterate(this.elements, 0);\n    }\n\n    firstIterate = (arr, i) => {\n        if (i >= arr.length - 1) {\n            this.handler(arr);\n            return;\n        }\n        this.chooseMinElement(arr, i, i + 1, i);\n    }\n\n    chooseMinElement = (arr, i, j, minIdx) => {\n        if (j >= arr.length) {\n            [arr[minIdx], arr[i]] = [arr[i], arr[minIdx]];\n            arr[minIdx].color = arr[i].color = Color.RED;\n            this.handler(arr);\n            arr[minIdx].color = arr[i].color = Color.WHITE;\n            this.registerCallback(() => this.firstIterate(arr, i + 1));\n            return;\n        }\n        if (arr[j].height < arr[minIdx].height) {\n            minIdx = j;\n            arr[j].color = Color.RED;\n        } else {\n            arr[j].color = Color.GREEN;\n        }\n        this.handler(arr);\n        arr[j].color = Color.WHITE;\n        this.registerCallback(() => this.chooseMinElement(arr, i, j + 1, minIdx));\n    }\n}\n\nexport default SelectionSort;","import Sort from \"./Sort\";\nimport Color from \"./Color\";\n\nclass InsertionSort extends Sort {\n    sort = () => {\n        this.firstIterate(this.elements, 1);\n    }\n\n    firstIterate = (arr, i) => {\n        if (i >= arr.length) {\n            this.handler(arr);\n            return;\n        }\n        const value = arr[i].height;\n        this.secondIterate(arr, i, i - 1, value);\n    }\n\n    secondIterate = (arr, i, j, value) => {\n        if (j < 0 || arr[j].height <= value) {\n            arr[j + 1].height = value;\n            arr[j + 1].color = Color.RED;\n            this.handler(arr);\n            arr[j + 1].color = Color.WHITE;\n            this.registerCallback(() => this.firstIterate(arr, i + 1));\n            return;\n        }\n        arr[j + 1].height = arr[j].height;\n        arr[j + 1].color = Color.RED;\n        arr[j].color = Color.GREEN;\n        this.handler(arr);\n        arr[j + 1].color = arr[j].color = Color.WHITE;\n        this.registerCallback(() => this.secondIterate(arr, i, j - 1, value));\n    }\n}\n\nexport default InsertionSort;","import Sort from \"./Sort\";\nimport Color from \"./Color\";\n\nclass BottomUpMergeSort extends Sort {\n    sort = () => {\n        const newArr = [];\n        for (const e of this.elements) {\n            newArr.push(e.height);\n        }\n        this.mergeSort(this.elements, newArr, 1);\n    }\n\n    mergeSort = (arr, newArr, size) => {\n        if (size >= arr.length) {\n            this.handler(arr);\n            return;\n        }\n        this.bottomUp(arr, newArr, 0, size);\n    }\n\n    bottomUp = (arr, newArr, left, size) => {\n        if (left >= arr.length) {\n            this.handler(arr);\n            this.registerCallback(() => this.mergeSort(arr, newArr, size * 2));\n            return;\n        }\n        this.merge(arr, newArr, left, left + size - 1, Math.min(left + size * 2 - 1, arr.length - 1), size);\n    }\n\n    merge = (arr, newArr, left, mid, right, size) => {\n        let i = left;\n        let j = mid + 1;\n        let k = left;\n\n        while (i <= mid && j <= right) {\n            if (arr[i].height < arr[j].height) {\n                newArr[k++] = arr[i++].height;\n            } else {\n                newArr[k++] = arr[j++].height;\n            }\n        }\n\n        while (i < arr.length && i <= mid) {\n            newArr[k++] = arr[i++].height;\n        }\n        this.apply(arr, newArr, left, left, right, size);\n    }\n\n    apply = (arr, newArr, current, left, right, size) => {\n        if (current > right) {\n            this.handler(arr);\n            this.registerCallback(() => this.bottomUp(arr, newArr, left + size * 2, size));\n            return;\n        }\n        arr[current].height = newArr[current];\n        arr[current].color = Color.RED;\n        this.handler(arr);\n        arr[current].color = Color.WHITE;\n        this.registerCallback(() => this.apply(arr, newArr, current + 1, left, right, size));\n    }\n\n}\n\nexport default BottomUpMergeSort;\n","import Sort from \"./Sort\";\nimport Color from \"./Color\";\n\nclass QuickSort extends Sort {\n    sort = () => {\n        this.quickSort(this.elements, 0, this.elements.length - 1);\n    }\n\n    quickSort = (arr, left, right) => {\n        if (left >= right) {\n            this.handler(arr);\n            return;\n        }\n        this.position(arr, left, right, left, right, arr[left].height);\n    }\n\n    position = (arr, left, right, i, j, pivot) => {\n        if (i >= j) {\n            [arr[left].height, arr[j].height] = [arr[j].height, pivot];\n            arr[left].color = arr[j].color = Color.RED;\n            this.handler(arr);\n            arr[left].color = arr[j].color = Color.WHITE;\n            this.quickSort(arr, left, j - 1);\n            this.quickSort(arr, j + 1, right);\n            return;\n        }\n        while (arr[j].height > pivot) j--;\n        while (i < j && arr[i].height <= pivot) i++;\n        [arr[i], arr[j]] = [arr[j], arr[i]];\n        arr[i].color = arr[j].color = Color.RED;\n        this.handler(arr);\n        arr[i].color = arr[j].color = Color.WHITE;\n        this.registerCallback(() => this.position(arr, left, right, i, j, pivot));\n    }\n}\n\nexport default QuickSort;","import Sort from \"./Sort\";\nimport Color from \"./Color\";\n\nclass HeapSort extends Sort {\n    sort = () => {\n        this.constructHeap(this.elements, (this.elements.length >> 1) - 1, () => this.heapSort(this.elements, this.elements.length - 1))\n    }\n\n    constructHeap = (arr, cur, cb) => {\n        if (cur < 0) {\n            this.handler(arr);\n            this.registerCallback(() => cb());\n            return;\n        }\n        const left = (cur << 1) + 1;\n        const right = left + 1;\n        this.downHeap(arr, arr[cur].height, cur, left, right, arr.length, () => this.constructHeap(arr, cur - 1, cb));\n    }\n\n    heapSort = (arr, end) => {\n        if (end <= 0) {\n            this.handler(arr);\n            return;\n        }\n        [arr[0], arr[end]] = [arr[end], arr[0]];\n        arr[0].color = arr[end].color = Color.GREEN;\n        this.handler(arr);\n        arr[0].color = arr[end].color = Color.WHITE;\n        this.registerCallback(() => this.downHeap(arr, arr[0].height, 0, 1, 2, end, () => this.heapSort(arr, end - 1)));\n    }\n\n    downHeap = (arr, data, here, left, right, length, cb) => {\n        if (left >= length) {\n            arr[here].color = Color.GREEN;\n            arr[here].height = data;\n            this.handler(arr);\n            arr[here].color = Color.WHITE;\n            this.registerCallback(() => cb());\n            return;\n        }\n        let cmpIdx;\n        if (left === length - 1) {\n            cmpIdx = left;\n        } else if (arr[left].height > arr[right].height) {\n            cmpIdx = left;\n        } else {\n            cmpIdx = right;\n        }\n        if (data > arr[cmpIdx].height) {\n            arr[here].color = Color.GREEN;\n            arr[here].height = data;\n            this.handler(arr);\n            arr[here].color = Color.WHITE;\n            this.registerCallback(() => cb());\n            return;\n        }\n        arr[here].height = arr[cmpIdx].height;\n        arr[here].color = arr[cmpIdx].color = Color.RED;\n        this.handler(arr);\n        arr[here].color = arr[cmpIdx].color = Color.WHITE;\n        this.registerCallback(() => this.downHeap(arr, data, cmpIdx, (cmpIdx << 1) + 1, (cmpIdx << 1) + 2, length, cb));\n    }\n}\n\nexport default HeapSort;\n","import SortType from \"./SortType\";\nimport BubbleSort from \"./BubbleSort\";\nimport SelectionSort from \"./SelectionSort\";\nimport InsertionSort from \"./InsertionSort\";\nimport BottomUpMergeSort from \"./BottomUpMergeSort\";\nimport QuickSort from \"./QuickSort\";\nimport HeapSort from \"./HeapSort\";\n\nclass SortFactory {\n    constructor() {\n        this.sorts = [];\n    }\n\n    getSort = (type, elements, delay, handler, stopHandler) => {\n        if (this.sorts[type] === undefined) {\n            this.sorts[type] = getSortInstance(type);\n        }\n        this.sorts[type].elements = elements;\n        this.sorts[type].delay = delay;\n        this.sorts[type].handler = handler;\n        this.sorts[type].stopHandler = stopHandler;\n        return this.sorts[type];\n    }\n}\n\nfunction getSortInstance(type) {\n    switch (type) {\n        case SortType.Bubble:\n            return new BubbleSort();\n        case SortType.Selection:\n            return new SelectionSort();\n        case SortType.Insertion:\n            return new InsertionSort();\n        case SortType.Merge:\n            return new BottomUpMergeSort();\n        case SortType.Quick:\n            return new QuickSort();\n        case SortType.Heap:\n            return new HeapSort();\n        default:\n            return null;\n    }\n}\n\nexport default SortFactory;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Container from '../components/Container';\nimport '../style/App.css';\nimport Element from \"../sort/Element\";\nimport ElementMakeType from \"../sort/ElementMakeType\";\nimport SortFactory from \"../sort/SortFactory\";\nimport SortType from \"../sort/SortType\";\n\nclass home extends Component {\n    sortFactory = new SortFactory();\n    sortInstance;\n\n    constructor(props) {\n        super(props);\n        const length = 100;\n        let element = new Element();\n        element.initElements(length, ElementMakeType.RANDOM);\n\n        this.state = {\n            length,\n            element,\n            sortType: SortType.Bubble,\n            elementType: ElementMakeType.RANDOM,\n            delay: 10,\n            list: []\n        }\n    }\n\n    handleArray = (list) => {\n        console.log(list);\n        this.setState({\n            list,\n        }, this.remakeFileList);\n\n    }\n\n    handleLength = (length) => {\n        console.log(length);\n        this.setState({\n            length,\n        }, this.remakeHeightList);\n    }\n\n    remakeFileList = () => {\n        this.handleStop();\n        const {\n            element,\n            length,\n            elementType,\n            list\n        } = this.state;\n        element.initElements(length, elementType, list);\n        this.setState({element});\n    }\n\n    remakeHeightList = () => {\n        this.handleStop();\n        const {\n            element,\n            length,\n            elementType\n        } = this.state;\n        element.initElements(length, elementType);\n        this.setState({element});\n    }\n\n    updateElementArr = (arr) => {\n        const element = this.state.element;\n        element.arr = arr;\n        this.setState({\n            element\n        });\n    }\n\n    handleSorting = () => {\n        const {\n            sortType,\n            delay\n        } = this.state;\n        this.sortInstance = this.sortFactory.getSort(sortType, this.state.element.arr, delay, this.updateElementArr, this.handleSorting);\n        this.handleStop();\n        this.sortInstance.start();\n    }\n\n    handleStop = () => {\n        if(this.sortInstance) {\n            this.sortInstance.stop();\n        }\n    }\n\n    handleDelay = (delay) => {\n        this.handleStop();\n        this.setState({\n            delay\n        });\n    }\n\n    handleSortType = (sortType) => {\n        this.handleStop();\n        this.setState({\n            sortType\n        }, this.remakeHeightList);\n    }\n\n    handleElemType = (elementType) => {\n        this.handleStop();\n        this.setState({\n            elementType\n        }, this.remakeHeightList);\n    }\n  render() {\n    const {\n        sorting,\n        length,\n        delay,\n        element,\n        sortType,\n        elementType\n    } = this.state;\n    \n    const {\n        handleLength,\n        handleSorting,\n        handleStop,\n        handleDelay,\n        handleSortType,\n        remakeHeightList,\n        handleElemType\n    } = this;\n    return (\n        <div className=\"App\">\n        <Header/>\n        <Container\n        {...this.state}\n        {...this}\n        />\n        </div>    \n    );\n  }\n}\n\nexport default home;\n\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport './header.css';\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className=\"randomheader\">\n                <h1>upload file and sort</h1>                \n            </div>\n        );\n    }\n}\n\nexport default Header;\n","export function getBubbleSortAnimations(array) {\n    let animations = [];\n    let auxillaryArray = array.slice();\n    bubbleSort(auxillaryArray, animations);\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b); //sort 잘 됐는지 체크(boolean)\n    //console.log(\"sort works correctly? \", arraysAreEqual(javaScriptSortedArray, auxillaryArray));\n    array = auxillaryArray;\n    return [animations, array];\n}\n\nfunction bubbleSort(auxillaryArray, animations) {\n    const N = auxillaryArray.length;\n    for (let i = 0; i < N - 1; i++) {\n        for (let j = 0; j < N - i - 1; j++) {\n            animations.push([j, j + 1]);\n            animations.push([j, j + 1]);\n            if (auxillaryArray[j] > auxillaryArray[j + 1]) {\n                animations.push([j, auxillaryArray[j + 1]]);\n                animations.push([j + 1, auxillaryArray[j]]);\n                swap(auxillaryArray, j, j + 1);\n            } else {\n                animations.push([-1, -1]);\n                animations.push([-1, -1]);\n            }\n        }\n    }\n}\n\nfunction swap(auxillaryArray, firstIndex, secondIndex) {\n    let temp = auxillaryArray[firstIndex];\n    auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n    auxillaryArray[secondIndex] = temp;\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n    if (firstArray.length !== secondArray.length) {\n        return false;\n    }\n    for (let i = 0; i < firstArray.length; i++) {\n        if (firstArray[i] !== secondArray[i]) {\n            return false;\n        }\n    }\n    return true;\n}","export function getSelectionSortAnimations(array) {\n    let animations = [];\n    let auxillaryArray = array.slice();\n    selectionSort(auxillaryArray, animations);\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n    console.log(\"selection sort works correctly? \", arraysAreEqual(javaScriptSortedArray, auxillaryArray));\n    array = auxillaryArray;\n    return [animations, array];\n}\n\nfunction selectionSort(auxillaryArray, animations) {\n    const N = auxillaryArray.length;\n    for (let i = 0; i < N - 1; i++) {\n        let minIndex = i; //Finding minimum element in unsorted array\n        for (let j = i + 1; j < N; j++) {\n            animations.push([\"comparision1\", j, minIndex]);\n            animations.push([\"comparision2\", j, minIndex]);\n            if (auxillaryArray[j] < auxillaryArray[minIndex]) {\n                minIndex = j;\n            }\n        }\n        animations.push([\"swap\", minIndex, auxillaryArray[i]]);\n        animations.push([\"swap\", i, auxillaryArray[minIndex]]);\n        // Swap the found minimum element with the first element\n        swap(auxillaryArray, minIndex, i);\n    }\n}\n\nfunction swap(auxillaryArray, firstIndex, secondIndex) {\n    let temp = auxillaryArray[firstIndex];\n    auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n    auxillaryArray[secondIndex] = temp;\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n    if (firstArray.length !== secondArray.length) {\n        return false;\n    }\n    for (let i = 0; i < firstArray.length; i++) {\n        if (firstArray[i] !== secondArray[i]) {\n            return false;\n        }\n    }\n    return true;\n}","export function getMergeSort(array) {\n    const animations = [];\n    if (array.length <= 1) return array;\n    const auxiliaryArray = array.slice();\n    mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n    return animations;\n}\n\nfunction mergeSortHelper(\n    mainArray, startIdx, endIdx, auxiliaryArray, animations\n) {\n    if (startIdx === endIdx) return;\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\n    mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n    mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n    merge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n}\n\nfunction merge(\n    mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations\n) {\n    let k = startIdx;\n    let i = startIdx;\n    let j = middleIdx + 1;\n    while (i <= middleIdx && j <= endIdx) {\n        // These are the values that we're comparing; we push them once\n        // to change their color.\n        animations.push([i, j]);\n        // These are the values that we're comparing; we push them a second\n        // time to revert their color.\n        animations.push([i, j]);\n        if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n            // We overwrite the value at index k in the original array with the\n            // value at index i in the auxiliary array.\n            animations.push([k, auxiliaryArray[i]]);\n            mainArray[k++] = auxiliaryArray[i++];\n        } else {\n            // We overwrite the value at index k in the original array with the\n            // value at index j in the auxiliary array.\n            animations.push([k, auxiliaryArray[j]]);\n            mainArray[k++] = auxiliaryArray[j++];\n        }\n    }\n    while (i <= middleIdx) {\n        // These are the values that we're comparing; we push them once\n        // to change their color.\n        animations.push([i, i]);\n        // These are the values that we're comparing; we push them a second\n        // time to revert their color.\n        animations.push([i, i]);\n        // We overwrite the value at index k in the original array with the\n        // value at index i in the auxiliary array.\n        animations.push([k, auxiliaryArray[i]]);\n        mainArray[k++] = auxiliaryArray[i++];\n    }\n    while (j <= endIdx) {\n        // These are the values that we're comparing; we push them once\n        // to change their color.\n        animations.push([j, j]);\n        // These are the values that we're comparing; we push them a second\n        // time to revert their color.\n        animations.push([j, j]);\n        // We overwrite the value at index k in the original array with the\n        // value at index j in the auxiliary array.\n        animations.push([k, auxiliaryArray[j]]);\n        mainArray[k++] = auxiliaryArray[j++];\n    }\n}","export function getQuickSortAnimations(array) {\n    let animations = [];\n    let auxillaryArray = array.slice();\n    quickSort(auxillaryArray, 0, auxillaryArray.length - 1, animations);\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n    console.log(\"sort works correctly? \", arraysAreEqual(javaScriptSortedArray, auxillaryArray));\n    array = auxillaryArray;\n    return [animations, array];\n}\n\nfunction quickSort(auxillaryArray, startIndex, endIndex, animations) {\n    let pivotIndex;\n    if (startIndex < endIndex) {\n        pivotIndex = partitionArray(auxillaryArray, startIndex, endIndex, animations);\n        quickSort(auxillaryArray, startIndex, pivotIndex - 1, animations);\n        quickSort(auxillaryArray, pivotIndex + 1, endIndex, animations);\n    }\n}\n\nfunction partitionArray(auxillaryArray, startIndex, endIndex, animations) {\n    let pivot = auxillaryArray[endIndex];\n    let pivotIndex = startIndex;\n    for (let i = startIndex; i <= endIndex - 1; i++) {\n        animations.push([i, endIndex]);\n        animations.push([i, endIndex]);\n        if (auxillaryArray[i] <= pivot) {\n            //Swap these two heights\n            animations.push([i, auxillaryArray[pivotIndex]]);\n            animations.push([pivotIndex, auxillaryArray[i]]);\n            swap(auxillaryArray, i, pivotIndex);\n            pivotIndex++;\n        } else {\n            animations.push([-1, -1]);\n            animations.push([-1, -1]);\n        }\n        animations.push([-1, -1]);\n        animations.push([-1, -1]);\n    }\n    animations.push([-1, -1]);\n    animations.push([-1, -1]);\n    animations.push([-1, -1]);\n    animations.push([-1, -1]);\n    //Swap these two heights\n    animations.push([pivotIndex, auxillaryArray[endIndex]]);\n    animations.push([endIndex, auxillaryArray[pivotIndex]]);\n    swap(auxillaryArray, pivotIndex, endIndex);\n    return pivotIndex;\n}\n\nfunction swap(auxillaryArray, firstIndex, secondIndex) {\n    let temp = auxillaryArray[firstIndex];\n    auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n    auxillaryArray[secondIndex] = temp;\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n    if (firstArray.length !== secondArray.length) {\n        return false;\n    }\n    for (let i = 0; i < firstArray.length; i++) {\n        if (firstArray[i] !== secondArray[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n","export function getHeapSortAnimations(array) {\n    let animations = [];\n    let auxillaryArray = array.slice();\n    let len = array.length;\n    HeapSortHelper(auxillaryArray, animations, len);\n    array = auxillaryArray;\n    console.log(animations);\n    return [animations, array];\n}\n\nfunction HeapSortHelper(auxillaryArray, animations, len)\n{\n    for(let i = len/2-1; i >= 0; i--){\n        HeapSort(auxillaryArray, animations, i, len);\n    }\n    \n    for(let i = len-1; i>0; --i){\n        \n        swap(animations, auxillaryArray, 0, i);\n        HeapSort(auxillaryArray, animations, 0, i);\n\n    }\n}\nfunction HeapSort(auxillaryArray, animations, parent, size) {\n    var temp_parent = parent;\n    var left_child = parent * 2 + 1;\n    var right_child = parent * 2 + 2;\n\n    console.log(auxillaryArray);\n\n    if(left_child < size && auxillaryArray[temp_parent] < auxillaryArray[left_child]){\n        temp_parent = left_child;\n    }\n\n    if(right_child < size && auxillaryArray[temp_parent] < auxillaryArray[right_child]){\n        temp_parent = right_child;\n    }\n\n    if(parent != temp_parent){\n        /*animations.push([temp_parent, parent]);\n        animations.push([temp_parent, parent]);\n        animations.push([parent, auxillaryArray[temp_parent]]);\n        animations.push([temp_parent, auxillaryArray[parent]]);*/\n        swap(animations, auxillaryArray, parent, temp_parent);\n        HeapSort(auxillaryArray, animations, temp_parent, size);\n    }\n    else {\n        animations.push([temp_parent, parent]);\n        animations.push([temp_parent, parent]);\n        animations.push([-1, auxillaryArray[temp_parent]]);\n        animations.push([-1, auxillaryArray[parent]]);\n    }\n}\n\nfunction swap(animations, auxillaryArray, firstIndex, secondIndex) {\n    animations.push([firstIndex, secondIndex]);\n    animations.push([firstIndex, secondIndex]);\n    animations.push([firstIndex, auxillaryArray[secondIndex]]);\n    animations.push([secondIndex, auxillaryArray[firstIndex]]);\n    let temp = auxillaryArray[firstIndex];\n    auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n    auxillaryArray[secondIndex] = temp;\n}\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../bubblesort/SortingVisualizer/Header';\nimport '../bubblesort/SortingVisualizer/SortingViz.css';\nimport {getBubbleSortAnimations} from '../bubblesort/SortingAlgorithms/BubbleSort.js'\nimport {getSelectionSortAnimations} from '../bubblesort/SortingAlgorithms/SelectionSort.js'\nimport {getInsertionSortAnimations} from '../bubblesort/SortingAlgorithms/InsertionSort.js'\nimport {getMergeSort} from '../bubblesort/SortingAlgorithms/MergeSort.js'\nimport {getQuickSortAnimations} from '../bubblesort/SortingAlgorithms/QuickSort.js'\nimport {getHeapSortAnimations} from '../bubblesort/SortingAlgorithms/HeapSort.js'\n\nconst ANIMATION_SPEED_MS = 1;\n// This is the main color of the array bars.\nconst PRIMARY_COLOR = 'yellow';\n// This is the color of array bars that are being compared throughout the animations.\nconst SECONDARY_COLOR = 'red';\n\nexport default class SortingViz extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            array: [],\n        }\n    }\n\n    componentDidMount(){\n        this.resetArray();\n    }\n\n    resetArray(){\n        const array = [];\n        for(let i=1;i<=100;i++){\n            array.push(i*5)\n        }\n        this.setState({array})\n    }\n\n    bubbleSort(){\n        const [animations,sortArray] = getBubbleSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n            const isColorChange = (i % 4 === 0) || (i % 4 === 1); //bool\n            const arrayBars = document.getElementsByClassName('array-bar');\n            if(isColorChange === true) {\n                const color = (i % 4 === 0) ? SECONDARY_COLOR : PRIMARY_COLOR;\n                const [barOneIndex, barTwoIndex] = animations[i];\n                const barOneStyle = arrayBars[barOneIndex].style; //height\n                const barTwoStyle = arrayBars[barTwoIndex].style;   //height\n                setTimeout(() => {\n                    barOneStyle.backgroundColor = color;\n                    barTwoStyle.backgroundColor = color;\n                },i * ANIMATION_SPEED_MS);\n            }\n            else {\n                const [barIndex, newHeight] = animations[i];\n                if (barIndex === -1) {\n                    continue;\n                }\n                const barStyle = arrayBars[barIndex].style;\n                setTimeout(() => {\n                    barStyle.height = `${newHeight}px`;\n                },i * ANIMATION_SPEED_MS);\n            }\n        }\n    }\n\n    selectionSort(){\n        const [animations,sortArray] = getSelectionSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n            const isColorChange = (animations[i][0] === \"comparision1\") || (animations[i][0] === \"comparision2\");\n            const arrayBars = document.getElementsByClassName('array-bar');\n            if(isColorChange === true) {\n                const color = (animations[i][0] === \"comparision1\") ? SECONDARY_COLOR : PRIMARY_COLOR;\n                const [temp, barOneIndex, barTwoIndex] = animations[i];\n                const barOneStyle = arrayBars[barOneIndex].style;\n                const barTwoStyle = arrayBars[barTwoIndex].style;\n                setTimeout(() => {\n                    barOneStyle.backgroundColor = color;\n                    barTwoStyle.backgroundColor = color;\n                },i * ANIMATION_SPEED_MS);\n            }\n            else {\n                const [temp, barIndex, newHeight] = animations[i];\n                const barStyle = arrayBars[barIndex].style;\n                setTimeout(() => {\n                    barStyle.height = `${newHeight}px`;\n                },i * ANIMATION_SPEED_MS);\n            }\n        }\n        // this.setState({array: sortArray})\n        const RESTORE_TIME = parseInt(ANIMATION_SPEED_MS*animations.length/2 + 3000);\n\n    }\n\n    insertionSort(){\n        const [animations,sortArray] = getInsertionSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n            const isColorChange = (animations[i][0] === \"comparision1\") || (animations[i][0] === \"comparision2\");\n            const arrayBars = document.getElementsByClassName('array-bar');\n            if(isColorChange === true) {\n                const color = (animations[i][0] === \"comparision1\") ? SECONDARY_COLOR : PRIMARY_COLOR;\n                const [temp, barOneIndex, barTwoIndex] = animations[i];\n                const barOneStyle = arrayBars[barOneIndex].style;\n                const barTwoStyle = arrayBars[barTwoIndex].style;\n                setTimeout(() => {\n                    barOneStyle.backgroundColor = color;\n                    barTwoStyle.backgroundColor = color;\n                },i * ANIMATION_SPEED_MS);\n            }\n            else {\n                const [temp, barIndex, newHeight] = animations[i];\n                const barStyle = arrayBars[barIndex].style;\n                setTimeout(() => {\n                    barStyle.height = `${newHeight}px`;\n                },i * ANIMATION_SPEED_MS);\n            }\n        }\n        // this.setState({array: sortArray})\n        const RESTORE_TIME = parseInt(ANIMATION_SPEED_MS*animations.length/2 + 3000);\n\n    }\n\n    quickSort(){\n        const [animations,sortArray] = getQuickSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length - 1; i++) {\n            const isColorChange = (i % 6 === 0) || (i % 6 === 1);\n            const arrayBars = document.getElementsByClassName('array-bar');\n            if(isColorChange === true) {\n                const color = (i % 6 === 0) ? SECONDARY_COLOR : PRIMARY_COLOR;\n                const [barOneIndex, barTwoIndex] = animations[i];\n                if(barOneIndex === -1) {\n                    continue;\n                }\n                const barOneStyle = arrayBars[barOneIndex].style;\n                const barTwoStyle = arrayBars[barTwoIndex].style;\n                setTimeout(() => {\n                    barOneStyle.backgroundColor = color;\n                    barTwoStyle.backgroundColor = color;\n                },i * ANIMATION_SPEED_MS);\n            }\n            else {\n                const [barIndex, newHeight] = animations[i];\n                if (barIndex === -1) {\n                    continue;\n                }\n                const barStyle = arrayBars[barIndex].style;\n                setTimeout(() => {\n                    barStyle.height = `${newHeight}px`;\n                },i * ANIMATION_SPEED_MS);\n            }\n        }\n        // this.setState({array: sortArray})\n        const RESTORE_TIME = parseInt(ANIMATION_SPEED_MS*animations.length/2 + 3000);\n\n    }\n\n    mergeSort(){\n        const animations = getMergeSort(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n            const arrayBars = document.getElementsByClassName('array-bar');\n            const isColorChange = i % 3 !== 2;\n            if (isColorChange) {\n                const [barOneIdx, barTwoIdx] = animations[i];\n                const barOneStyle = arrayBars[barOneIdx].style;\n                const barTwoStyle = arrayBars[barTwoIdx].style;\n                const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n                setTimeout(() => {\n                barOneStyle.backgroundColor = color;\n                barTwoStyle.backgroundColor = color;\n                },   i * ANIMATION_SPEED_MS);\n            }\n            else {\n                setTimeout(() => {\n                const [barOneIdx, newHeight] = animations[i];\n                const barOneStyle = arrayBars[barOneIdx].style;\n                barOneStyle.height = `${newHeight}px`;\n                }, i * ANIMATION_SPEED_MS);\n            }\n        }\n    }\n\n    heapSort(){\n        const [animations,sortArray] = getHeapSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n            const isColorChange = (i % 4 === 0) || (i % 4 === 1); //bool\n            const arrayBars = document.getElementsByClassName('array-bar');\n            if(isColorChange === true) {\n                const color = (i % 4 === 0) ? SECONDARY_COLOR : PRIMARY_COLOR;\n                const [barOneIndex, barTwoIndex] = animations[i];\n                const barOneStyle = arrayBars[barOneIndex].style; //height\n                const barTwoStyle = arrayBars[barTwoIndex].style;   //height\n                setTimeout(() => {\n                    barOneStyle.backgroundColor = color;\n                    barTwoStyle.backgroundColor = color;\n                },i * ANIMATION_SPEED_MS);\n            }\n            else {\n                const [barIndex, newHeight] = animations[i];\n                if (barIndex === -1) {\n                    continue;\n                }\n                const barStyle = arrayBars[barIndex].style;\n                setTimeout(() => {\n                    barStyle.height = `${newHeight}px`;\n                },i * ANIMATION_SPEED_MS);\n            }\n        }\n    }\n\n    afterFunc = (e) => {\n        function fn_newCallBack(array){\n            var list = array;\n            for(var i=0; i< list.length; i++) {\n                list[i] = list[i]/5;\n            }\n            saveToFile_Chrome(\"Bubblesort_result.txt\", list)\n        }          \n        setTimeout(fn_newCallBack(this.state.array), 0); \n        console.log(e);\n        this.setState( {array: e});\n        var result = this.state.array;\n        this.bubbleSort();\n        \n        //saveToFile_Chrome(\"result.txt\", list, function(){\n        //});\n    }\n\n    handleChange(e){\n        let file = e.target.files[0];\n        let fileReader = new FileReader();\n        let list;\n        fileReader.onload = () => {\n            //console.log(fileReader.result);\n            var text = fileReader.result\n            var array = text.split(\" \");\n            console.log(array);\n            for(var i=0; i<array.length; i++) {\n                array[i] = 5 * Number(array[i]);\n            }\n            list = array;\n            this.afterFunc(list);\n        };\n        fileReader.readAsText(file);\n    }\n\n    afterFunc1 = (e) => {\n        function fn_newCallBack(array){\n            var list = array;\n            for(var i=0; i< list.length; i++) {\n                list[i] = list[i]/5;\n            }\n            saveToFile_Chrome(\"Selectionsort_result.txt\", list)\n        }          \n        setTimeout(fn_newCallBack(this.state.array), 0); \n        console.log(e);\n        this.setState( {array: e});\n        //console.log(this.state.array);\n        this.selectionSort();\n    }\n\n    handleChange1(e){\n        let file = e.target.files[0];\n        let fileReader = new FileReader();\n        let list;\n        fileReader.onload = () => {\n            //console.log(fileReader.result);\n            var text = fileReader.result\n            var array = text.split(\" \");\n            console.log(array);\n            for(var i=0; i<array.length; i++) {\n                array[i] = 5 * Number(array[i]);\n            }\n            //console.log(array);\n            list = array;\n            this.afterFunc1(list);\n        };\n        fileReader.readAsText(file);\n    }\n\n    afterFunc2 = (e) => {\n        function fn_newCallBack(array){\n            var list = array;\n            for(var i=0; i< list.length; i++) {\n                list[i] = list[i]/5;\n            }\n            saveToFile_Chrome(\"Insertionsort_result.txt\", list)\n        }          \n        setTimeout(fn_newCallBack(this.state.array), 0); \n        console.log(e);\n        this.setState( {array: e});\n        //console.log(this.state.array);\n        this.insertionSort();\n    }\n\n    handleChange2(e){\n        let file = e.target.files[0];\n        let fileReader = new FileReader();\n        let list;\n        fileReader.onload = () => {\n            //console.log(fileReader.result);\n            var text = fileReader.result\n            var array = text.split(\" \");\n            console.log(array);\n            for(var i=0; i<array.length; i++) {\n                array[i] = 5 * Number(array[i]);\n            }\n            //console.log(array);\n            list = array;\n            this.afterFunc2(list);\n        };\n        fileReader.readAsText(file);\n    }\n\n    afterFunc3 = (e) => {\n        function fn_newCallBack(array){\n            var list = array;\n            for(var i=0; i< list.length; i++) {\n                list[i] = list[i]/5;\n            }\n            saveToFile_Chrome(\"Quicksort_result.txt\", list)\n        }          \n        setTimeout(fn_newCallBack(this.state.array), 0); \n        console.log(e);\n        this.setState( {array: e});\n        this.quickSort();\n    }\n\n    handleChange3(e){\n        let file = e.target.files[0];\n        let fileReader = new FileReader();\n        let list;\n        fileReader.onload = () => {\n            //console.log(fileReader.result);\n            var text = fileReader.result\n            var array = text.split(\" \");\n            console.log(array);\n            for(var i=0; i<array.length; i++) {\n                array[i] = 5 * Number(array[i]);\n            }\n            //console.log(array);\n            list = array;\n            this.afterFunc3(list);\n        };\n        fileReader.readAsText(file);\n    }\n\n    afterFunc4 = (e) => {\n        function fn_newCallBack(array){\n            var list = array;\n            for(var i=0; i< list.length; i++) {\n                list[i] = list[i]/5;\n            }\n            saveToFile_Chrome(\"Mergesort_result.txt\", list)\n        }          \n        setTimeout(fn_newCallBack(this.state.array), 0); \n        console.log(e);\n        this.setState( {array: e});\n        this.mergeSort();\n    }\n\n    handleChange4(e){\n        let file = e.target.files[0];\n        let fileReader = new FileReader();\n        let list;\n        fileReader.onload = () => {\n            //console.log(fileReader.result);\n            var text = fileReader.result\n            var array = text.split(\" \");\n            console.log(array);\n            for(var i=0; i<array.length; i++) {\n                array[i] = 5 * Number(array[i]);\n            }\n            //console.log(array);\n            list = array;\n            this.afterFunc4(list);\n        };\n        fileReader.readAsText(file);\n    }\n\n    afterFunc5 = (e) => {\n        function fn_newCallBack(array){\n            var list = array;\n            for(var i=0; i< list.length; i++) {\n                list[i] = list[i]/5;\n            }\n            saveToFile_Chrome(\"Heapsort_result.txt\", list)\n        }          \n        setTimeout(fn_newCallBack(this.state.array), 0); \n        console.log(e);\n        this.setState( {array: e});\n        var result = this.state.array;\n        this.heapSort();\n\n    }\n    handleChange5(e){\n        let file = e.target.files[0];\n        let fileReader = new FileReader();\n        let list;\n        fileReader.onload = () => {\n            //console.log(fileReader.result);\n            var text = fileReader.result\n            var array = text.split(\" \");\n            console.log(array);\n            for(var i=0; i<array.length; i++) {\n                array[i] = 5*Number(array[i]);\n            }\n            list = array;\n            this.afterFunc5(list);\n        };\n        fileReader.readAsText(file);\n    }\n\n    render(){\n        const {array} = this.state;\n        return(\n            <div className=\"randompage\">\n            <Header/>\n            <br/>\n                    <label className=\"input-file-button\" for=\"input-file\">Bubble Sort</label>\n                    <input type=\"file\" id=\"input-file\"  style={{display:\"none\"}} accept='.txt' onChange={this.handleChange.bind(this)}/>\n                    <label className=\"input-file-button4\" for=\"input-file4\">Merge Sort</label>\n                    <input type=\"file\" id=\"input-file4\"  style={{display:\"none\"}} accept='.txt' onChange={this.handleChange4.bind(this)}/> \n                    <label className=\"input-file-button1\" for=\"input-file1\">Selection Sort</label>\n                    <input type=\"file\" id=\"input-file1\"  style={{display:\"none\"}} accept='.txt' onChange={this.handleChange1.bind(this)}/> \n                    <label className=\"input-file-button2\" for=\"input-file2\">Insertion Sort</label>\n                    <input type=\"file\" id=\"input-file2\"  style={{display:\"none\"}} accept='.txt' onChange={this.handleChange2.bind(this)}/> \n                    <label className=\"input-file-button3\" for=\"input-file3\">Quick Sort</label>\n                    <input type=\"file\" id=\"input-file3\"  style={{display:\"none\"}} accept='.txt' onChange={this.handleChange3.bind(this)}/> \n                    <label className=\"input-file-button5\" for=\"input-file5\">Heap Sort</label>\n                    <input type=\"file\" id=\"input-file5\"  style={{display:\"none\"}} accept='.txt' onChange={this.handleChange5.bind(this)}/> \n                    <Link to=\"./\"> \n                    <input type = \"button\" className = \"linkhome\" value=\"Go Home\"/>\n                    </Link>\n            <br/>\n            <br/>\n            <br/>\n            <div className=\"array-container\">\n            {array.map((value,idx) => (\n                <div\n                className=\"array-bar\"\n                 key={idx}\n                 style={{height: `${value}px`}}\n                 ></div>\n            ))}\n            <br></br>\n            </div>\n            </div>\n        )\n    }\n}\n\nfunction arrayAreEqual(arrayOne,ArrayTwo){\n    if(arrayOne.length !== ArrayTwo.length) return false;\n    for(let i=0;i<arrayOne.length;i++){\n        if(arrayOne[i] !== ArrayTwo[i]) return false;\n    }\n    return true;\n}\n\nfunction saveToFile_Chrome(fileName, content) {\n    var blob = new Blob([content], { type: 'text/plain' });\n    var objURL = window.URL.createObjectURL(blob);\n            \n    // 이전에 생성된 메모리 해제\n    if (window.__Xr_objURL_forCreatingFile__) {\n        window.URL.revokeObjectURL(window.__Xr_objURL_forCreatingFile__);\n    }\n    window.__Xr_objURL_forCreatingFile__ = objURL;\n    var a = document.createElement('a');\n    a.download = fileName;\n    a.href = objURL;\n    a.click();\n}\n","export function getInsertionSortAnimations(array) {\n    let animations = [];\n    let auxillaryArray = array.slice();\n    insertionSort(auxillaryArray, animations);\n    const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n    console.log(\"sort works correctly? \", arraysAreEqual(javaScriptSortedArray, auxillaryArray));\n    array = auxillaryArray;\n    return [animations, array];\n}\n\nfunction insertionSort(auxillaryArray, animations) {\n    const N = auxillaryArray.length;\n    for (let i = 1; i < N; i++) {\n        let key = auxillaryArray[i];\n        let j = i - 1;\n        animations.push([\"comparision1\", j, i]);\n        animations.push([\"comparision2\", j, i]);\n        while (j >= 0 && auxillaryArray[j] > key) {\n            animations.push([\"overwrite\", j + 1, auxillaryArray[j]]);\n            auxillaryArray[j + 1] = auxillaryArray[j];\n            j = j - 1;\n            if (j >= 0) {\n                animations.push([\"comparision1\", j, i]);\n                animations.push([\"comparision2\", j, i]);\n            }\n        }\n        animations.push([\"overwrite\", j + 1, key]);\n        auxillaryArray[j + 1] = key;\n    }\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n    if (firstArray.length !== secondArray.length) {\n        return false;\n    }\n    for (let i = 0; i < firstArray.length; i++) {\n        if (firstArray[i] !== secondArray[i]) {\n            return false;\n        }\n    }\n    return true;\n}","import React, {Component} from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Home, RandomPage } from './pages';\n\n\nclass App extends Component {\nrender() {\n    return(\n      <div className='App'>\n        <BrowserRouter>\n          <Route path=\"/\" component={ Home } exact />\n          <Route path=\"/FilePage\" component={ RandomPage } exact/>\n        </BrowserRouter>\n      </div>\n    )\n  }\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}